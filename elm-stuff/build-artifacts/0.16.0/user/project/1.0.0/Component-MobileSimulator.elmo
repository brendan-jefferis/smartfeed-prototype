Elm.Component = Elm.Component || {};
Elm.Component.MobileSimulator = Elm.Component.MobileSimulator || {};
Elm.Component.MobileSimulator.make = function (_elm) {
   "use strict";
   _elm.Component = _elm.Component || {};
   _elm.Component.MobileSimulator = _elm.Component.MobileSimulator || {};
   if (_elm.Component.MobileSimulator.values)
   return _elm.Component.MobileSimulator.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Component$SmartFeed = Elm.Component.SmartFeed.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var mockDeviceNav = A2($Html.div,
   _U.list([$Html$Attributes.$class("mock-device-nav")]),
   _U.list([A2($Html.i,
           _U.list([$Html$Attributes.$class("fa fa-battery-full")]),
           _U.list([]))
           ,A2($Html.span,
           _U.list([$Html$Attributes.$class("nav-text")]),
           _U.list([$Html.text("1:20")]))]));
   var update = F2(function (action,model) {
      var _p0 = action;
      if (_p0.ctor === "NoOp") {
            return model;
         } else {
            return _U.update(model,
            {smartFeed: A2($Component$SmartFeed.update,
            _p0._0,
            model.smartFeed)});
         }
   });
   var SmartFeed = function (a) {
      return {ctor: "SmartFeed",_0: a};
   };
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.h4,
              _U.list([]),
              _U.list([$Html.text("SmartFeed Prototype")]))
              ,A2($Html.p,
              _U.list([$Html$Attributes.$class("subheader")]),
              _U.list([$Html.text("Revision 1")]))
              ,A2($Html.div,
              _U.list([$Html$Attributes.$class("mobile-sim-container ratio-16-9")]),
              _U.list([mockDeviceNav
                      ,A2($Component$SmartFeed.view,
                      A2($Signal.forwardTo,address,SmartFeed),
                      model.smartFeed)]))]));
   });
   var NoOp = {ctor: "NoOp"};
   var actions = $Signal.mailbox(NoOp);
   var init = {smartFeed: $Component$SmartFeed.init};
   var model = A3($Signal.foldp,update,init,actions.signal);
   var Model = function (a) {    return {smartFeed: a};};
   return _elm.Component.MobileSimulator.values = {_op: _op
                                                  ,init: init
                                                  ,update: update
                                                  ,view: view
                                                  ,Model: Model};
};